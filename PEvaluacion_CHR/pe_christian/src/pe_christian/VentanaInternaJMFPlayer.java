/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pe_christian;
import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.media.Buffer;
import javax.media.CannotRealizeException;
import javax.media.Manager;
import javax.media.MediaLocator;
import javax.media.NoPlayerException;
import javax.media.Player;
import javax.media.control.FrameGrabbingControl;
import javax.media.format.VideoFormat;
import javax.media.util.BufferToImage;

/**
 *
 * @author Chris
 */

public class VentanaInternaJMFPlayer extends javax.swing.JInternalFrame {
    
private Player player = null;

    /**
     * Creates new form VentanaInternaJMFPlayer
     * @param f
     */

public VentanaInternaJMFPlayer(File f) {
    initComponents();
    String sfichero = "file:" + f.getAbsolutePath();
    MediaLocator ml = new MediaLocator(sfichero);
        try {
            player = Manager.createRealizedPlayer(ml);
            Component vc = player.getVisualComponent();
            if(vc!=null)add(vc, java.awt.BorderLayout.CENTER);
                Component cpc = player.getControlPanelComponent();
            if(cpc!=null)add(cpc, java.awt.BorderLayout.SOUTH);
                this.pack();
        }catch(IOException | CannotRealizeException | NoPlayerException e) {
            System.err.println("VentanaInternaJMFPlayer: "+e);
            player = null;
        }
}

public static VentanaInternaJMFPlayer getInstance(File f){
    VentanaInternaJMFPlayer v = new VentanaInternaJMFPlayer(f);
    return (v.player!=null?v:null);
}

public void play() {
    if (player != null) {
        try {
            player.start();
        } catch (Exception e) {
        System.err.println("VentanaInternaJMFPlayer: "+e);
        }
    }
} 

public void stop() {
 if (player != null) {
        try {
            player.stop();
        } catch (Exception e) {
        System.err.println("VentanaInternaJMFPlayer: "+e);
        }
    }
} 

public void close() {
    if (player != null) {
        try {
            player.close();
        } catch (Exception e) {
        System.err.println("VentanaInternaJMFPlayer: "+e);
        }
    }
} 

 public BufferedImage getFrame(Player player) {
    FrameGrabbingControl fgc;
    String claseCtr = "javax.media.control.FrameGrabbingControl";
    fgc = (FrameGrabbingControl) player.getControl(claseCtr);
    Buffer bufferFrame = fgc.grabFrame();
    BufferToImage bti;
    bti = new BufferToImage((VideoFormat) bufferFrame.getFormat());
    Image img = bti.createImage(bufferFrame);
    return (BufferedImage) img;
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
 
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(800, 400));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        player.close();
    }//GEN-LAST:event_formInternalFrameClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
